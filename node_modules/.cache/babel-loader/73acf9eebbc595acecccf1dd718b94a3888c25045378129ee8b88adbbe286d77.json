{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\nbaseURL = 'http://127.0.0.1:8000/';\n// }\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = params => {\n      return api.get('/posts/', {\n        params\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.addPost = postBody => {\n      const formData = new FormData();\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n      return api.post('/posts/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.deletePost = id => {\n      return api.delete(`/posts/delete/${id}/`).catch(error => {\n        throw new Error(error);\n      });\n    };\n    this.getMovies = async params => {\n      let url = '/movies/';\n      let query = new URLSearchParams();\n      for (const key in params) {\n        if (params[key] != null) {\n          query.append(key, params[key]);\n        }\n      }\n      if (query.toString() !== '') {\n        url += '?' + query.toString();\n      }\n      const places = await api.get(url).then(response => {\n        console.log(response.data);\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return places;\n    };\n    this.getMovie = async id => {\n      const movies = await api.get('/movies/' + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return movies;\n    };\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","params","get","then","response","data","catch","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getMovies","url","query","URLSearchParams","toString","places","log","getMovie","movies"],"sources":["/Users/techi.s./techis-wd-forum-django-react/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\n\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\nbaseURL = 'http://127.0.0.1:8000/';\n// }\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\napi.interceptors.request.use(\n    config => {\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n    getPosts = params => {\n        return api\n            .get('/posts/', { params })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n    };\n    addPost = postBody => {\n        const formData = new FormData();\n\n        for (const key in postBody) {\n            formData.append(key, postBody[key]);\n        }\n\n        return api\n            .post('/posts/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n    };\n    deletePost = id => {\n        return api.delete(`/posts/delete/${id}/`).catch(error => {\n            throw new Error(error);\n        });\n    };\n\n    getMovies = async params => {\n        let url = '/movies/';\n        let query = new URLSearchParams();\n        for (const key in params) {\n            if (params[key] != null) {\n                query.append(key, params[key]);\n            }\n        }\n\n        if (query.toString() !== '') {\n            url += '?' + query.toString();\n        }\n        const places = await api\n            .get(url)\n            .then(response => {\n                console.log(response.data);\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return places;\n    };\n\n    getMovie = async id => {\n        const movies = await api\n            .get('/movies/' + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return movies;\n    };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}